<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ktds.crmai.service.impl.StatisticsMapper">
	<resultMap type="com.ktds.crmai.model.AIStatistics" id="aiStatisticMap">
		<result column="CAM_ID" property="camId"/>
		<result column="CAM_NAME" property="camName"/>
		<result column="CAM_TYPE" property="camType"/>
		<result column="CAM_STATUS" property="camStatus"/>
		<result column="ADM_ID" property="admId"/>
		<result column="ADM_NAME" property="admName"/>
		<result column="ADM_TYPE" property="admType"/>
		<result column="CAM_CDATE" property="camCdate"/>
		<result column="TRAIN_METHOD" property="trainMethod"/>
		<result column="TEST_CNT" property="testCnt"/>
		<result column="ORIGINAL_ACC" property="originalAcc"/>
		<result column="SO_ACC" property="soAcc"/>
		<result column="REAL_ACC" property="realAcc"/>
		<result column="MODEL_FLAG" property="modelFlag"/>
		
		<result column="ORIGINAL_ACC_AVG" property="originalAccAvg"/>
		<result column="SO_ACC_AVG" property="soAccAvg"/>
		<result column="REAL_ACC_AVG" property="realAccAvg"/>
	</resultMap>
	
	<sql id="inputParam">
		<!-- 캠페인명 존재 시 -->
		<if test="camName != null">
			AND CAM_NAME LIKE '%' || #{camName} || '%'
		</if>
		<!-- 캠페인 목적 존재 시 -->
		<if test='(camType != null) and !(camType eq "".toString())'>
			AND CAM_TYPE = #{camType}
		</if>
		<!-- 캠페인 상태 존재 시 -->
		<if test='(camStatus != null) and !(camStatus eq "".toString())'>
			AND CAM_STATUS = #{camStatus}
		</if>
		<!-- 생성자 존재 시 -->
		<if test='(admId != null) and !(admId eq "".toString())'>
			AND ADM_ID = #{admId}
		</if>
		<!-- 기간 존재 시 -->
		<if test='(beforeDate != null) and !(beforeDate eq "".toString()) and (afterDate != null) and !(afterDate eq "".toString())'>
			AND CAM_CDATE BETWEEN #{beforeDate} AND #{afterDate}
		</if>
	</sql>
	
	<!-- 선택된 모델 여부(MODEL_FLAG가 Y인 목록) -->
	<select id="selectSttModelYList" resultMap="aiStatisticMap" parameterType="com.ktds.crmai.model.AIStatistics">
		SELECT CAM_ID,
			   CAM_NAME,
			   CAM_TYPE,
			   CAM_STATUS,
			   ADM_NAME,
			   CAM_CDATE,
			   TRAIN_METHOD,
			   TEST_CNT,
			   ORIGINAL_ACC,
			   SO_ACC,
			   REAL_ACC
		FROM AI_STATISTICS
		
		<!-- 파라메터 조건 -->
		WHERE MODEL_FLAG = 'Y' AND <![CDATA[ REAL_ACC <> 0 ]]> 
		
		<include refid="inputParam"></include>
		
		ORDER BY CAM_ID DESC
	</select>
	
	<!-- 의사결정나무평균 쿼리 -->
	<select id="selectDTreeAvg" resultMap="aiStatisticMap" parameterType="com.ktds.crmai.model.AIStatistics">
		SELECT NVL(ROUND(AVG(ORIGINAL_ACC), 2), 0) as ORIGINAL_ACC_AVG, 
			   NVL(ROUND(AVG(SO_ACC), 2), 0) as SO_ACC_AVG, 
			   NVL(ROUND(AVG(REAL_ACC), 2), 0) as REAL_ACC_AVG
		FROM AI_STATISTICS
		
		<!-- 파라메터 조건 -->
		WHERE TRAIN_METHOD = 'DecisionTree' 
		
		<include refid="inputParam"></include>
	</select>
	
	<!-- 랜덤포레스트 평균 쿼리 -->
	<select id="selectRFavg" resultMap="aiStatisticMap" parameterType="com.ktds.crmai.model.AIStatistics">
		SELECT NVL(ROUND(AVG(ORIGINAL_ACC), 2), 0) as ORIGINAL_ACC_AVG, 
			   NVL(ROUND(AVG(SO_ACC), 2), 0) as SO_ACC_AVG, 
			   NVL(ROUND(AVG(REAL_ACC), 2), 0) as REAL_ACC_AVG
		FROM AI_STATISTICS
		
		<!-- 파라메터 조건 -->
		WHERE TRAIN_METHOD = 'RandomForest' 
		
		<include refid="inputParam"></include>
	</select>
	
	<!-- SVM 평균 쿼리 -->
	<select id="selectSVMavg" resultMap="aiStatisticMap" parameterType="com.ktds.crmai.model.AIStatistics">
		SELECT NVL(ROUND(AVG(ORIGINAL_ACC), 2), 0) as ORIGINAL_ACC_AVG, 
			   NVL(ROUND(AVG(SO_ACC), 2), 0) as SO_ACC_AVG, 
			   NVL(ROUND(AVG(REAL_ACC), 2), 0) as REAL_ACC_AVG
		FROM AI_STATISTICS
		
		<!-- 파라메터 조건 -->
		WHERE TRAIN_METHOD = 'svm' 
		
		<include refid="inputParam"></include>
	</select>
	
	<!-- 선형회기 평균 쿼리 -->
	<select id="selectLRavg" resultMap="aiStatisticMap" parameterType="com.ktds.crmai.model.AIStatistics">
		SELECT NVL(ROUND(AVG(ORIGINAL_ACC), 2), 0) as ORIGINAL_ACC_AVG, 
			   NVL(ROUND(AVG(SO_ACC), 2), 0) as SO_ACC_AVG, 
			   NVL(ROUND(AVG(REAL_ACC), 2), 0) as REAL_ACC_AVG
		FROM AI_STATISTICS
		
		<!-- 파라메터 조건 -->
		WHERE TRAIN_METHOD = 'LogisticRegression' 
		
		<include refid="inputParam"></include>
	</select>
</mapper>